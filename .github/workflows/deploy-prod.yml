name: "Deploy-prod"

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ap-northeast-1

      - name: Set version
        run:  echo "PACKAGE_VERSION=`node -pe "require('./package.json')['version']"`" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        id:   login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        id:   build-image
        env:
          REGISTRY:   ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: svelte-app
          IMAGE_TAG:  ${{ env.PACKAGE_VERSION }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Generate github token
        id:   generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id:      ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - name:  dispatch
        shell: bash
        run:   |
          curl -X POST \
          -H "Authorization: token ${{ steps.generate_token.outputs.token }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/taroshun32/taroshun32-actions/dispatches" \
          -d '{"event_type":"slack-confirm","client_payload":{"REPOSITORY":"svelte-app","TAG":"${{ env.PACKAGE_VERSION }}"}'
